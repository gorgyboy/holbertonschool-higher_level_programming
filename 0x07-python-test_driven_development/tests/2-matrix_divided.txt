================================
DOCTEST MODUULE 2-matrix_divided
================================


Importing the method

::
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided


Testing that the method works:

::
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> print(matrix_divided(matrix, 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]


Testing with div as infinity:

::
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> print(matrix_divided(matrix, float("inf")))
    [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]


Testing missing and incorrect arguments:

::
    >>> matrix = [[1, 2, 3], 'a']
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

::
    >>> matrix = [[1, 2, 3], ['d', 5, 6]]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

::
    >>> matrix = [[1, 2], [3, 4, 5, 6,]]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size

::
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> print(matrix_divided(matrix, 'a'))
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

::
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> print(matrix_divided(matrix, 0))
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero

::
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> print(matrix_divided(matrix))
    Traceback (most recent call last):
        ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

::
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> print(matrix_divided())
    Traceback (most recent call last):
        ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
